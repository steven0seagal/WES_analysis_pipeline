name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly to catch issues with dependencies
    - cron: '0 6 * * 1'

env:
  CONDA_ENV_NAME: wes-analysis

jobs:
  lint-and-format:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 shellcheck-py yamllint pre-commit

    - name: Run pre-commit hooks
      run: |
        pre-commit install
        pre-commit run --all-files || true

    - name: Check Python formatting with Black
      run: |
        black --check --diff .

    - name: Lint Python code with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check shell scripts with shellcheck
      run: |
        find . -name "*.sh" -exec shellcheck {} \;

    - name: Validate YAML files
      run: |
        yamllint -d relaxed config/*.yaml environment.yml || true

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        environment-file: environment.yml
        activate-environment: wes-analysis
        auto-activate-base: false
        use-mamba: true

    - name: Validate environment
      shell: bash -l {0}
      run: |
        conda activate wes-analysis
        conda list
        which bwa samtools gatk fastqc

    - name: Run basic validation
      run: |
        bash scripts/validate_installation.sh

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: wes-pipeline:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install documentation dependencies
      run: |
        pip install mkdocs mkdocs-material

    - name: Build documentation
      run: |
        # If using MkDocs
        # mkdocs build

        # For now, just validate markdown
        find . -name "*.md" -exec markdownlint {} \;